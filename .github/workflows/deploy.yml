name: Build and Deploy Spring PetClinic

on:
  push:
    branches:
      - development  # âœ… Auto-trigger only on push to development
  workflow_dispatch:    # âœ… Allow manual trigger â€” we'll filter inside

jobs:
  build-and-deploy:
    if: github.ref == 'refs/heads/main'  # âœ… Block job if not main branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-petclinic:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-petclinic:latest

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
          run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
              # Install Docker if not present
              if ! command -v docker &> /dev/null; then
                echo "ðŸ”§ Installing Docker..."
                sudo apt update
                sudo apt install -y docker.io
                sudo systemctl enable docker
                sudo systemctl start docker
                sudo usermod -aG docker $USER
                newgrp docker
              fi
        
              # Deploy container
              docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
              docker pull ${{ secrets.DOCKER_USERNAME }}/spring-petclinic:latest
              docker stop petclinic || true
              docker rm petclinic || true
              docker run -d --name petclinic -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/spring-petclinic:latest
            EOF

