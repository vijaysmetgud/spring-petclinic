name: Build and Deploy Spring PetClinic

on:
  push:
    branches:
      - main
  workflow_dispatch:  # ‚úÖ Only manual trigger

jobs:
  build-and-deploy:
    #if: github.ref == 'refs/heads/development'  # ‚úÖ Only run if triggered on 'development'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-petclinic:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-petclinic:latest

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            if ! command -v docker &> /dev/null; then
              echo "üîß Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            echo "üê≥ Logging into Docker..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            echo "‚¨áÔ∏è Pulling image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/spring-petclinic:latest

            echo "üßº Cleaning up old container..."
            sudo docker stop petclinic || true
            sudo docker rm petclinic || true

            echo "üöÄ Running new container..."
            sudo docker run -d --name petclinic -p 8085:8080 ${{ secrets.DOCKER_USERNAME }}/spring-petclinic:latest
          EOF
